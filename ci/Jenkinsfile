#! groovy

MAKE='make -f ci/Makefile'

node('docker') {

    currentBuild.displayName = "PR #${env.ghprbPullId}@${env.NODE_NAME}"
    configFileProvider([
        configFile(fileId: 'global', variable: 'GLOBAL'),
    ]) {
        global = load env.GLOBAL
    }

    stage('Checkout') {
        checkout scm
    }

    withEnv([
        "COMMIT_SHA=${env.ghprbActualCommit}",
        "IMAGE_TAG=${env.ghprbActualCommit.substring(0,8)}",
        "PROJECT_NAME=zing-cassandra-${env.BUILD_NUMBER}"]) {
        try {
            stage('Build image') {
                sh("${MAKE} build")
            }
        } finally {
            stage ('Clean test environment') {
                sh("${MAKE} ci-clean")
            }
        }

        stage('Publish image') {
            def pubSteps = [:]
            for (int i = 0; i < global.PUBLISHERS.size(); i++) {
                def registry = "${global.PUBLISHERS[i]}"
                def stepName  = "publishing image to [${i}] ${registry}"
                pubSteps[stepName] = {
                    sh("${MAKE} push REGISTRY=${registry}")
                }
            }
            parallel pubSteps
        }

        stage('Acceptance tests') {
            sh("${MAKE} ci/version.yml REGISTRY=${global.PUBLISHER_STAGING}")
            build job: env.GLOBAL_ACCEPTANCE_JOB, parameters: [
                text(name: 'VERSION', value: readFile('ci/version.yml')),
                text(name: 'OVERRIDE_BUILD_ID', value:"zing-cassandra PR#${ghprbPullId}")
            ]
        }
    }
}
